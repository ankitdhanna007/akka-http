/**
 * This class is generated by jOOQ
 */
package com.main.jooq.model.tables.records;


import com.main.jooq.model.tables.Orders;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record7<Integer, Integer, Integer, Timestamp, String, String, String> {

    private static final long serialVersionUID = 291117529;

    /**
     * Setter for <code>store.orders.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>store.orders.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>store.orders.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>store.orders.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>store.orders.product_id</code>.
     */
    public void setProductId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>store.orders.product_id</code>.
     */
    public Integer getProductId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>store.orders.date</code>.
     */
    public void setDate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>store.orders.date</code>.
     */
    public Timestamp getDate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>store.orders.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>store.orders.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    /**
     * Setter for <code>store.orders.is_fulfilled</code>.
     */
    public void setIsFulfilled(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>store.orders.is_fulfilled</code>.
     */
    public String getIsFulfilled() {
        return (String) get(5);
    }

    /**
     * Setter for <code>store.orders.is_paid</code>.
     */
    public void setIsPaid(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>store.orders.is_paid</code>.
     */
    public String getIsPaid() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Timestamp, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Timestamp, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Orders.ORDERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Orders.ORDERS.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Orders.ORDERS.PRODUCT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Orders.ORDERS.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Orders.ORDERS.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Orders.ORDERS.IS_FULFILLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Orders.ORDERS.IS_PAID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProductId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getIsFulfilled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIsPaid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value3(Integer value) {
        setProductId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value4(Timestamp value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value5(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value6(String value) {
        setIsFulfilled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value7(String value) {
        setIsPaid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Integer id, Integer userId, Integer productId, Timestamp date, String state, String isFulfilled, String isPaid) {
        super(Orders.ORDERS);

        set(0, id);
        set(1, userId);
        set(2, productId);
        set(3, date);
        set(4, state);
        set(5, isFulfilled);
        set(6, isPaid);
    }
}
